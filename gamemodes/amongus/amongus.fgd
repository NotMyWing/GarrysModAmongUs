@include "base.fgd"

@BaseClass = AULocatable :
	"Defines an entity as being located in an area for the gamemode for i18n purposes"
[
	areaname(string) : "Area Name" : : "The internal (ie, non-localized) name of the area this button is in"
]

@BaseClass base(AULocatable) = AUTaskButton :
	"Properties shared among sabotage/task buttons"
[
	customdata(string) : "Custom Data" : : "Any data to pass to the task instance for this button"
]

@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_start_meeting :
	"Optional spawn point for the meeting area, as seen in Mira HQ and Polus."
[
]

@SolidClass base(Origin, RenderFields, Targetname) = func_meeting_button :
	"Meeting button, the button that may start many meetings."
[
]

@PointClass base(func_meeting_button, prop_static_base) studioprop() = prop_meeting_button :
	"Meeting button, the button that may start many meetings. Now in a prop form."
[
]

@SolidClass base(Origin, RenderFields, Targetname, AUTaskButton) = func_task_button :
	"Task button yo."
[
	taskname(string) : "Task Name" : : "The internal name of the task this button activates"

	output OnTaskUse(void) : "Called when a player starts doing the task using this button"
	output OnTaskCancel(void) : "Called when a player cancels the task using this button"
	output OnTaskAdvance(void) : "Called when a player submits the task using this button"
	output OnTaskComplete(void) : "Called when a player completes the task using this button"
]

@PointClass base(func_task_button, prop_static_base) studioprop() = prop_task_button :
	"Task button 2: static prop boogaloo"
[
]

@SolidClass base(Origin, RenderFields, Targetname) = func_vent :
	"Vent."
[
	viewangle(angle) : "View Angle" : : "Sets player's view to this angle when they vent here"
	viewpoint(vector) : "View Position" : : "Optional: Moves player's view to this location when they vent here"

	input Link(void) : "Vent which can reach this vent"
	output Link(void) : "Vent which can be reached from this vent"

	output OnVentIn(void) : "Called when a player jumps into this vent"
	output OnVentOut(void) : "Called when a player jumps out of this vent"
]

@PointClass base(func_vent, prop_static_base) studioprop() = prop_vent :
	"Vent. Prop Vent."
[
]

@SolidClass base(Origin, RenderFields, Targetname, AUTaskButton) = func_sabotage_button :
	"Sabotage button. Pretty much the same thing as task button, but not quite."
[
	sabotagename(string) "Sabotage Name" : : "The internal name of the sabotage this button is associated with"
]

@SolidClass base(func_sabotage_button, prop_static_base) = prop_sabotage_button :
	"Sabotage button. Pretty much the same thing as task button, but not quite. Prop."
[
]
